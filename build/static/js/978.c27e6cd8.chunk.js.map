{"version":3,"file":"static/js/978.c27e6cd8.chunk.js","mappings":"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","sources":["components/modals/clients/AddClientModal.jsx","components/modals/clients/EditClientModal.jsx","pages/admin/clients/Clients.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Select from \"react-select\";\r\nimport Axios from \"../../../utils/api\";\r\n\r\nconst initialFormData = {\r\n  client_name: \"\",\r\n  client_email: \"\",\r\n  client_address: \"\",\r\n  company: \"\",\r\n};\r\n\r\nconst initialValidationErrorFields = {\r\n  client_name: \"\",\r\n  client_email: \"\",\r\n  client_address: \"\",\r\n  company: \"\",\r\n};\r\n\r\nfunction AddClientModal({ show, setShow }) {\r\n  //   const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const [validationError, setValidationError] = useState(\r\n    initialValidationErrorFields\r\n  );\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const onChangeHandler = (e) => {\r\n    const { value, name } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const validateFormFields = () => {\r\n    setValidationError(initialValidationErrorFields);\r\n    let error = {};\r\n    const { client_name, client_email, client_address, company } = formData;\r\n    if (!client_name) {\r\n      error.client_name = \"Required\";\r\n    }\r\n    if (!client_email) {\r\n      error.client_email = \"Required\";\r\n    }\r\n    if (!client_address) {\r\n      error.client_address = \"Required\";\r\n    }\r\n    if (!company) {\r\n      error.company = \"Required\";\r\n    }\r\n    if (Object.keys(error).length > 0) {\r\n      console.log(error);\r\n      setValidationError(error);\r\n      console.log(\"error is present\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"inside handle submit\");\r\n    if (validateFormFields()) {\r\n      console.log(\"hi\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Client</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"client_name\"\r\n                value={formData.client_name}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">{validationError?.client_name}</div>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Client Address</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"client_address\"\r\n                value={formData.client_address}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {validationError?.client_address}\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"client_email\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"email\"\r\n                value={formData.client_email}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">{validationError?.client_email}</div>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Company</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"branch\"\r\n                value={formData.company}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">{validationError?.company}</div>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"flat\" className=\"btn-medium\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"flat\" className=\"btn-medium\" onClick={handleSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddClientModal;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Select from \"react-select\";\r\nimport Axios from \"../../../utils/api\";\r\n\r\nconst initialFormData = {\r\n  client_name: \"\",\r\n  client_email: \"\",\r\n  client_address: \"\",\r\n  company: \"\",\r\n};\r\n\r\nconst initialValidationErrorFields = {\r\n  client_name: \"\",\r\n  client_email: \"\",\r\n  client_address: \"\",\r\n  company: \"\",\r\n};\r\n\r\nfunction EditClientModal({ show, setShow }) {\r\n  //   const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const [validationError, setValidationError] = useState(\r\n    initialValidationErrorFields\r\n  );\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const onChangeHandler = (e) => {\r\n    const { value, name } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const validateFormFields = () => {\r\n    setValidationError(initialValidationErrorFields);\r\n    let error = {};\r\n    const { client_name, client_email, client_address, company } = formData;\r\n\r\n    if (!client_name) {\r\n      error.client_name = \"Required\";\r\n    }\r\n    if (!client_email) {\r\n      error.client_email = \"Required\";\r\n    }\r\n    if (!client_address) {\r\n      error.client_address = \"Required\";\r\n    }\r\n    if (!company) {\r\n      error.company = \"Required\";\r\n    }\r\n    if (Object.keys(error).length > 0) {\r\n      console.log(error);\r\n      setValidationError(error);\r\n      console.log(\"error is present\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"inside handle submit\");\r\n    if (validateFormFields()) {\r\n      console.log(\"hi\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Client</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"client_name\"\r\n                value={formData.client_name}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">{validationError?.client_name}</div>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Client Address</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"client_address\"\r\n                value={formData.client_address}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {validationError?.client_address}\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"client_email\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"email\"\r\n                value={formData.client_email}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">{validationError?.client_email}</div>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"mb-3 fw-bold\"\r\n              controlId=\"exampleForm.ControlInput1\"\r\n            >\r\n              <Form.Label>Company</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                className=\"shadow-none\"\r\n                name=\"branch\"\r\n                value={formData.company}\r\n                onChange={onChangeHandler}\r\n              />\r\n              <div className=\"text-danger\">{validationError?.company}</div>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"flat\" className=\"btn-medium\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"flat\" className=\"btn-medium\" onClick={handleSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditClientModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport Pagination from \"../../../components/Pagination\";\r\nimport { BsFillEyeFill } from \"react-icons/bs\";\r\nimport { MdEdit, MdBlock } from \"react-icons/md\";\r\nimport AddClientModal from \"../../../components/modals/clients/AddClientModal\";\r\nimport EditClientModal from \"../../../components/modals/clients/EditClientModal\";\r\nimport BlockModal from \"../../../components/modals/BlockModal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"../../../utils/api\";\r\nfunction Projects() {\r\n  const [showAddClientModal, setShowAddClientModal] = useState(false);\r\n  const [showEditClientModal, setShowEditClientModal] = useState(false);\r\n  const [showBlockModal, setShowBlockModal] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const getData = async () => {\r\n    try {\r\n      const response = await Axios.get(`/admin/clients`);\r\n      console.log(response.data.data);\r\n      setData(response.data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AddClientModal\r\n        show={showAddClientModal}\r\n        setShow={setShowAddClientModal}\r\n      />\r\n      <EditClientModal\r\n        show={showEditClientModal}\r\n        setShow={setShowEditClientModal}\r\n      />\r\n      <BlockModal show={showBlockModal} setShow={setShowBlockModal} />\r\n      <div className=\"d-flex justify-content-end\">\r\n        <div\r\n          className=\"fw-bold btn-medium\"\r\n          onClick={() => setShowAddClientModal(true)}\r\n        >\r\n          Add Client +\r\n        </div>\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <table className=\"table-local\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Client Name</th>\r\n              <th>Client Email</th>\r\n              <th>Client Address</th>\r\n              <th>Status</th>\r\n              <th>Company</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n\r\n            {data?.map((item) => {\r\n              return (\r\n                <tr key={item._id}>\r\n                  <td>{item?.client_name}</td>\r\n                  <td>{item?.client_email}</td>\r\n                  <td>{item?.client_address}</td>\r\n                  <td>{item?.status ? \"Active\" : \"Not Active\"}</td>\r\n                  <td>{item?.company}</td>\r\n                  <td>\r\n                    <BsFillEyeFill\r\n                      className=\"me-1 cursor-pointer\"\r\n                      onClick={() =>\r\n                        navigate(`/admin/view-project/${item._id}`)\r\n                      }\r\n                    />{\" \"}\r\n                    <MdEdit\r\n                      className=\"me-1 cursor-pointer\"\r\n                      onClick={() => setShowEditClientModal(true)}\r\n                    />\r\n                    <MdBlock\r\n                      className=\"me-1 cursor-pointer\"\r\n                      onClick={() => setShowBlockModal(true)}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Pagination onPageChange={() => console.log(\"abc\")} total={10} page={2} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\nconst Wrapper = Styled.div`\r\n\r\n \r\n`;\r\n"],"names":["initialFormData","client_name","client_email","client_address","company","initialValidationErrorFields","show","setShow","useState","formData","setFormData","validationError","setValidationError","handleClose","onChangeHandler","e","target","value","name","prev","validateFormFields","error","Object","keys","length","console","log","handleSubmit","preventDefault","Modal","onHide","closeButton","Form","className","controlId","type","placeholder","onChange","Button","variant","onClick","showAddClientModal","setShowAddClientModal","showEditClientModal","setShowEditClientModal","showBlockModal","setShowBlockModal","data","setData","navigate","useNavigate","getData","Axios","response","useEffect","Wrapper","BlockModal","map","item","status","_id","Pagination","onPageChange","total","page","Styled"],"sourceRoot":""}